// This file is generated by WOK (CPPJini).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#include <jjAIS_AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive.h>
#include <AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive.hxx>
#include <jcas.hxx>
#include <stdlib.h>
#include <Standard_ErrorHandler.hxx>
#include <Standard_Failure.hxx>
#include <Standard_SStream.hxx>

#include <AIS_DataMapofIntegerListOfinteractive.hxx>
#include <Standard_Integer.hxx>
#include <AIS_ListOfInteractive.hxx>


extern "C" {


JNIEXPORT void JNICALL Java_jjAIS_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_1Create_11 (JNIEnv *env, jobject theobj)
{

jcas_Locking alock(env);
{
try {
AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive* theret = new AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive();
jcas_SetHandle(env,theobj,theret);

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();

}



JNIEXPORT void JNICALL Java_jjAIS_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_1Create_12 (JNIEnv *env, jobject theobj, jobject aMap)
{

jcas_Locking alock(env);
{
try {
AIS_DataMapofIntegerListOfinteractive* the_aMap = (AIS_DataMapofIntegerListOfinteractive*) jcas_GetHandle(env,aMap);
if ( the_aMap == NULL ) {

 // The following assumes availability of the default constructor (what may not
 // always be the case). Therefore explicit exception is thrown if the null
 // object has been passed.
 // the_aMap = new AIS_DataMapofIntegerListOfinteractive ();
 // jcas_SetHandle ( env, aMap, the_aMap );
 jcas_ThrowException (env, "NULL object has been passed while expecting an object manipulated by value");

}  // end if
AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive* theret = new AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive(*the_aMap);
jcas_SetHandle(env,theobj,theret);

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();

}



JNIEXPORT void JNICALL Java_jjAIS_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_Initialize (JNIEnv *env, jobject theobj, jobject aMap)
{

jcas_Locking alock(env);
{
try {
AIS_DataMapofIntegerListOfinteractive* the_aMap = (AIS_DataMapofIntegerListOfinteractive*) jcas_GetHandle(env,aMap);
if ( the_aMap == NULL ) {

 // The following assumes availability of the default constructor (what may not
 // always be the case). Therefore explicit exception is thrown if the null
 // object has been passed.
 // the_aMap = new AIS_DataMapofIntegerListOfinteractive ();
 // jcas_SetHandle ( env, aMap, the_aMap );
 jcas_ThrowException (env, "NULL object has been passed while expecting an object manipulated by value");

}  // end if
AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive* the_this = (AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive*) jcas_GetHandle(env,theobj);
the_this->Initialize(*the_aMap);

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();

}



JNIEXPORT jint JNICALL Java_jjAIS_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_Key (JNIEnv *env, jobject theobj)
{
jint thejret;

jcas_Locking alock(env);
{
try {
AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive* the_this = (AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive*) jcas_GetHandle(env,theobj);
 thejret = the_this->Key();

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();
return thejret;
}



JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_Value (JNIEnv *env, jobject theobj)
{
jobject thejret;

jcas_Locking alock(env);
{
try {
AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive* the_this = (AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive*) jcas_GetHandle(env,theobj);
const AIS_ListOfInteractive& theret = the_this->Value();
thejret = jcas_CreateObject(env,"jjAIS/AIS_ListOfInteractive",&theret,0);

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();
return thejret;
}



JNIEXPORT void JNICALL Java_jjAIS_AIS_1DataMapIteratorOfDataMapofIntegerListOfinteractive_FinalizeValue(JNIEnv *, jclass, jlong theid)
{
if (theid) {
  AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive* theobj = (AIS_DataMapIteratorOfDataMapofIntegerListOfinteractive*) theid;
  delete theobj;
}
}


}
