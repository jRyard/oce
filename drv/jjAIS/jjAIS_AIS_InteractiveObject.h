/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jjAIS_AIS_InteractiveObject */

#ifndef _Included_jjAIS_AIS_InteractiveObject
#define _Included_jjAIS_AIS_InteractiveObject
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Type
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1InteractiveObject_Type
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Signature
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_Signature
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AcceptShapeDecomposition
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_AcceptShapeDecomposition
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetCurrentFacingModel
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetCurrentFacingModel
  (JNIEnv *, jobject, jshort);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    CurrentFacingModel
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1InteractiveObject_CurrentFacingModel
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_SetColor_1
 * Signature: (LjjAIS/Quantity_Color;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1SetColor_11
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_SetColor_2
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1SetColor_12
  (JNIEnv *, jobject, jshort);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetColor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetColor
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetWidth
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetWidth
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetWidth
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetWidth
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AcceptDisplayMode
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_AcceptDisplayMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    DefaultDisplayMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_DefaultDisplayMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Redisplay
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_Redisplay
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetInfiniteState
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetInfiniteState
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    IsInfinite
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_IsInfinite
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasInteractiveContext
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasInteractiveContext
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    GetContext
 * Signature: ()LjjAIS/AIS_InteractiveContext;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1InteractiveObject_GetContext
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetContext
 * Signature: (LjjAIS/AIS_InteractiveContext;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetContext
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasOwner
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasOwner
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    GetOwner
 * Signature: ()LjjAIS/Standard_Transient;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1InteractiveObject_GetOwner
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetOwner
 * Signature: (LjjAIS/Standard_Transient;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetOwner
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    ClearOwner
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_ClearOwner
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasUsers
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasUsers
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Users
 * Signature: ()LjjAIS/TColStd_ListOfTransient;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1InteractiveObject_Users
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AddUser
 * Signature: (LjjAIS/Standard_Transient;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AddUser
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    ClearUsers
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_ClearUsers
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasDisplayMode
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasDisplayMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetDisplayMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetDisplayMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetDisplayMode
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetDisplayMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    DisplayMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_DisplayMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasSelectionMode
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasSelectionMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SelectionMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_SelectionMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetSelectionMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetSelectionMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetSelectionMode
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetSelectionMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SelectionPriority
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_SelectionPriority
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetSelectionPriority
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetSelectionPriority
  (JNIEnv *, jobject, jint);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetSelectionPriority
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetSelectionPriority
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasSelectionPriority
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasSelectionPriority
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasHilightMode
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasHilightMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HilightMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_HilightMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetHilightMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetHilightMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetHilightMode
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetHilightMode
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasColor
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasColor
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_Color_1
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1Color_11
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_Color_2
 * Signature: (LjjAIS/Quantity_Color;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1Color_12
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasWidth
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasWidth
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Width
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_jjAIS_AIS_1InteractiveObject_Width
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasMaterial
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasMaterial
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Material
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1InteractiveObject_Material
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_SetMaterial_1
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1SetMaterial_11
  (JNIEnv *, jobject, jshort);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_SetMaterial_2
 * Signature: (LjjAIS/Graphic3d_MaterialAspect;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1SetMaterial_12
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetMaterial
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetMaterial
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetTransparency
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetTransparency
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    IsTransparent
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_IsTransparent
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Transparency
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_jjAIS_AIS_1InteractiveObject_Transparency
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetTransparency
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetTransparency
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetAttributes
 * Signature: (LjjAIS/AIS_Drawer;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetAttributes
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Attributes
 * Signature: ()LjjAIS/AIS_Drawer;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1InteractiveObject_Attributes
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetAttributes
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetAttributes
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_State_1
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1State_11
  (JNIEnv *, jobject, jint);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    AIS_InteractiveObject_State_2
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1InteractiveObject_AIS_1InteractiveObject_1State_12
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetDegenerateModel
 * Signature: (SD)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetDegenerateModel
  (JNIEnv *, jobject, jshort, jdouble);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    DegenerateModel
 * Signature: (Ljcas/Standard_Real;)S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1InteractiveObject_DegenerateModel
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetTransformation
 * Signature: (LjjAIS/Geom_Transformation;ZZ)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetTransformation
  (JNIEnv *, jobject, jobject, jboolean, jboolean);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    UnsetTransformation
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_UnsetTransformation
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Transformation
 * Signature: ()LjjAIS/Geom_Transformation;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1InteractiveObject_Transformation
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasTransformation
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasTransformation
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasPresentation
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasPresentation
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    Presentation
 * Signature: ()LjjAIS/Prs3d_Presentation;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1InteractiveObject_Presentation
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetAspect
 * Signature: (LjjAIS/Prs3d_BasicAspect;Z)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetAspect
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    SetPolygonOffsets
 * Signature: (IDD)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_SetPolygonOffsets
  (JNIEnv *, jobject, jint, jdouble, jdouble);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    HasPolygonOffsets
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1InteractiveObject_HasPolygonOffsets
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_InteractiveObject
 * Method:    PolygonOffsets
 * Signature: (Ljcas/Standard_Integer;Ljcas/Standard_Real;Ljcas/Standard_Real;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1InteractiveObject_PolygonOffsets
  (JNIEnv *, jobject, jobject, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
