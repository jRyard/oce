// This file is generated by WOK (CPPJini).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.


package jjAIS;

import jjAIS.TCollection_BaseSequence;
import jjAIS.AIS_InteractiveObject;
import jcas.Standard_Integer;


public class AIS_SequenceOfInteractive extends jjAIS.TCollection_BaseSequence {

 static {
    System.loadLibrary("jjAIS");
 }
            
public AIS_SequenceOfInteractive() {
   AIS_SequenceOfInteractive_Create_1();
}

private final native void AIS_SequenceOfInteractive_Create_1();

native public final void Clear();
native public final AIS_SequenceOfInteractive Assign(AIS_SequenceOfInteractive Other);
final public void Append(AIS_InteractiveObject T) {
    AIS_SequenceOfInteractive_Append_1(T);
}

private final native void AIS_SequenceOfInteractive_Append_1(AIS_InteractiveObject T);

final public void Append(AIS_SequenceOfInteractive S) {
    AIS_SequenceOfInteractive_Append_2(S);
}

private final native void AIS_SequenceOfInteractive_Append_2(AIS_SequenceOfInteractive S);

final public void Prepend(AIS_InteractiveObject T) {
    AIS_SequenceOfInteractive_Prepend_1(T);
}

private final native void AIS_SequenceOfInteractive_Prepend_1(AIS_InteractiveObject T);

final public void Prepend(AIS_SequenceOfInteractive S) {
    AIS_SequenceOfInteractive_Prepend_2(S);
}

private final native void AIS_SequenceOfInteractive_Prepend_2(AIS_SequenceOfInteractive S);

final public void InsertBefore(int Index,AIS_InteractiveObject T) {
    AIS_SequenceOfInteractive_InsertBefore_1(Index,T);
}

private final native void AIS_SequenceOfInteractive_InsertBefore_1(int Index,AIS_InteractiveObject T);

final public void InsertBefore(int Index,AIS_SequenceOfInteractive S) {
    AIS_SequenceOfInteractive_InsertBefore_2(Index,S);
}

private final native void AIS_SequenceOfInteractive_InsertBefore_2(int Index,AIS_SequenceOfInteractive S);

final public void InsertAfter(int Index,AIS_InteractiveObject T) {
    AIS_SequenceOfInteractive_InsertAfter_1(Index,T);
}

private final native void AIS_SequenceOfInteractive_InsertAfter_1(int Index,AIS_InteractiveObject T);

final public void InsertAfter(int Index,AIS_SequenceOfInteractive S) {
    AIS_SequenceOfInteractive_InsertAfter_2(Index,S);
}

private final native void AIS_SequenceOfInteractive_InsertAfter_2(int Index,AIS_SequenceOfInteractive S);

native public final AIS_InteractiveObject First();
native public final AIS_InteractiveObject Last();
native public final void Split(int Index,AIS_SequenceOfInteractive Sub);
native public final AIS_InteractiveObject Value(int Index);
native public final void SetValue(int Index,AIS_InteractiveObject I);
native public final AIS_InteractiveObject ChangeValue(int Index);
final public void Remove(int Index) {
    AIS_SequenceOfInteractive_Remove_1(Index);
}

private final native void AIS_SequenceOfInteractive_Remove_1(int Index);

final public void Remove(int FromIndex,int ToIndex) {
    AIS_SequenceOfInteractive_Remove_2(FromIndex,ToIndex);
}

private final native void AIS_SequenceOfInteractive_Remove_2(int FromIndex,int ToIndex);



public native static void FinalizeValue(long anHID);

public void finalize() {
   synchronized(myCasLock) {
     if ( aVirer != 0 ) FinalizeValue(HID);
     HID = 0;
   }
}

}
