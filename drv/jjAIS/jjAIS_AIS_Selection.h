/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jjAIS_AIS_Selection */

#ifndef _Included_jjAIS_AIS_Selection
#define _Included_jjAIS_AIS_Selection
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jjAIS_AIS_Selection
 * Method:    AIS_Selection_Create_0
 * Signature: (Ljcas/Standard_CString;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1Selection_AIS_1Selection_1Create_10
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Remove
 * Signature: (Ljcas/Standard_CString;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1Selection_Remove
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Find
 * Signature: (Ljcas/Standard_CString;)Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1Selection_Find
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    CreateSelection
 * Signature: (Ljcas/Standard_CString;)Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1Selection_CreateSelection
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Selection
 * Signature: (Ljcas/Standard_CString;)LjjAIS/AIS_Selection;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1Selection_Selection
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    SetCurrentSelection
 * Signature: (Ljcas/Standard_CString;)Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1Selection_SetCurrentSelection
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    CurrentSelection
 * Signature: ()LjjAIS/AIS_Selection;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1Selection_CurrentSelection
  (JNIEnv *, jclass);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    AIS_Selection_Select_1
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1Selection_AIS_1Selection_1Select_11
  (JNIEnv *, jclass);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    AIS_Selection_Select_2
 * Signature: (LjjAIS/Standard_Transient;)S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1Selection_AIS_1Selection_1Select_12
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    AddSelect
 * Signature: (LjjAIS/Standard_Transient;)S
 */
JNIEXPORT jshort JNICALL Java_jjAIS_AIS_1Selection_AddSelect
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    ClearAndSelect
 * Signature: (LjjAIS/Standard_Transient;)V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1Selection_ClearAndSelect
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    IsSelected
 * Signature: (LjjAIS/Standard_Transient;)Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1Selection_IsSelected
  (JNIEnv *, jclass, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Extent
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1Selection_Extent
  (JNIEnv *, jclass);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Single
 * Signature: ()LjjAIS/Standard_Transient;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1Selection_Single
  (JNIEnv *, jclass);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1Selection_Init
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    More
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jjAIS_AIS_1Selection_More
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Next
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jjAIS_AIS_1Selection_Next
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Value
 * Signature: ()LjjAIS/Standard_Transient;
 */
JNIEXPORT jobject JNICALL Java_jjAIS_AIS_1Selection_Value
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    NbStored
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1Selection_NbStored
  (JNIEnv *, jobject);

/*
 * Class:     jjAIS_AIS_Selection
 * Method:    Index
 * Signature: (Ljcas/Standard_CString;)I
 */
JNIEXPORT jint JNICALL Java_jjAIS_AIS_1Selection_Index
  (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
