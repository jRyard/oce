// This file is generated by WOK (CPPJini).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#include <jjAIS_TCollection_BasicMap.h>
#include <TCollection_BasicMap.hxx>
#include <jcas.hxx>
#include <stdlib.h>
#include <Standard_ErrorHandler.hxx>
#include <Standard_Failure.hxx>
#include <Standard_SStream.hxx>

#include <Standard_Integer.hxx>
#include <Standard_Boolean.hxx>


extern "C" {


JNIEXPORT jint JNICALL Java_jjAIS_TCollection_1BasicMap_NbBuckets (JNIEnv *env, jobject theobj)
{
jint thejret;

jcas_Locking alock(env);
{
try {
TCollection_BasicMap* the_this = (TCollection_BasicMap*) jcas_GetHandle(env,theobj);
 thejret = the_this->NbBuckets();

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();
return thejret;
}



JNIEXPORT jint JNICALL Java_jjAIS_TCollection_1BasicMap_Extent (JNIEnv *env, jobject theobj)
{
jint thejret;

jcas_Locking alock(env);
{
try {
TCollection_BasicMap* the_this = (TCollection_BasicMap*) jcas_GetHandle(env,theobj);
 thejret = the_this->Extent();

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();
return thejret;
}



JNIEXPORT jboolean JNICALL Java_jjAIS_TCollection_1BasicMap_IsEmpty (JNIEnv *env, jobject theobj)
{
jboolean thejret;

jcas_Locking alock(env);
{
try {
TCollection_BasicMap* the_this = (TCollection_BasicMap*) jcas_GetHandle(env,theobj);
 thejret = the_this->IsEmpty();

}
catch (Standard_Failure) {
  Standard_SStream Err;
  Err <<   Standard_Failure::Caught(); 
  Err << (char) 0;
  jcas_ThrowException(env,GetSString(Err));
}
}
alock.Release();
return thejret;
}



JNIEXPORT void JNICALL Java_jjAIS_TCollection_1BasicMap_FinalizeValue(JNIEnv *, jclass, jlong theid)
{
if (theid) {
  TCollection_BasicMap* theobj = (TCollection_BasicMap*) theid;
  delete theobj;
}
}


}
