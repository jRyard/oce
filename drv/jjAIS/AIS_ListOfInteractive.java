// This file is generated by WOK (CPPJini).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.


package jjAIS;

import jcas.Standard_Integer;
import jcas.Standard_Boolean;
import jjAIS.AIS_InteractiveObject;
import jjAIS.AIS_ListIteratorOfListOfInteractive;


public class AIS_ListOfInteractive extends jcas.Object {

 static {
    System.loadLibrary("jjAIS");
 }
            
public AIS_ListOfInteractive() {
   AIS_ListOfInteractive_Create_1();
}

private final native void AIS_ListOfInteractive_Create_1();

native public final void Assign(AIS_ListOfInteractive Other);
native public final int Extent();
native public final void Clear();
native public final boolean IsEmpty();
final public void Prepend(AIS_InteractiveObject I) {
    AIS_ListOfInteractive_Prepend_1(I);
}

private final native void AIS_ListOfInteractive_Prepend_1(AIS_InteractiveObject I);

final public void Prepend(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive theIt) {
    AIS_ListOfInteractive_Prepend_2(I,theIt);
}

private final native void AIS_ListOfInteractive_Prepend_2(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive theIt);

final public void Prepend(AIS_ListOfInteractive Other) {
    AIS_ListOfInteractive_Prepend_3(Other);
}

private final native void AIS_ListOfInteractive_Prepend_3(AIS_ListOfInteractive Other);

final public void Append(AIS_InteractiveObject I) {
    AIS_ListOfInteractive_Append_1(I);
}

private final native void AIS_ListOfInteractive_Append_1(AIS_InteractiveObject I);

final public void Append(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive theIt) {
    AIS_ListOfInteractive_Append_2(I,theIt);
}

private final native void AIS_ListOfInteractive_Append_2(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive theIt);

final public void Append(AIS_ListOfInteractive Other) {
    AIS_ListOfInteractive_Append_3(Other);
}

private final native void AIS_ListOfInteractive_Append_3(AIS_ListOfInteractive Other);

native public final AIS_InteractiveObject First();
native public final AIS_InteractiveObject Last();
native public final void RemoveFirst();
native public final void Remove(AIS_ListIteratorOfListOfInteractive It);
final public void InsertBefore(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive It) {
    AIS_ListOfInteractive_InsertBefore_1(I,It);
}

private final native void AIS_ListOfInteractive_InsertBefore_1(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive It);

final public void InsertBefore(AIS_ListOfInteractive Other,AIS_ListIteratorOfListOfInteractive It) {
    AIS_ListOfInteractive_InsertBefore_2(Other,It);
}

private final native void AIS_ListOfInteractive_InsertBefore_2(AIS_ListOfInteractive Other,AIS_ListIteratorOfListOfInteractive It);

final public void InsertAfter(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive It) {
    AIS_ListOfInteractive_InsertAfter_1(I,It);
}

private final native void AIS_ListOfInteractive_InsertAfter_1(AIS_InteractiveObject I,AIS_ListIteratorOfListOfInteractive It);

final public void InsertAfter(AIS_ListOfInteractive Other,AIS_ListIteratorOfListOfInteractive It) {
    AIS_ListOfInteractive_InsertAfter_2(Other,It);
}

private final native void AIS_ListOfInteractive_InsertAfter_2(AIS_ListOfInteractive Other,AIS_ListIteratorOfListOfInteractive It);



public native static void FinalizeValue(long anHID);

public void finalize() {
   synchronized(myCasLock) {
     if ( aVirer != 0 ) FinalizeValue(HID);
     HID = 0;
   }
}

}
